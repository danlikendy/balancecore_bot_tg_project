"""Add payments table

Revision ID: 002
Revises: 001
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '002'
down_revision = '001'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('payments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=True),
    sa.Column('payment_method', sa.Enum('BANK_CARD', 'YOO_MONEY', 'QIWI', 'WEBMONEY', 'ALFABANK', 'SBERBANK', name='paymentmethod'), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'WAITING_FOR_CAPTURE', 'SUCCEEDED', 'CANCELED', 'FAILED', name='paymentstatus'), nullable=False),
    sa.Column('yookassa_payment_id', sa.String(length=255), nullable=True),
    sa.Column('yookassa_confirmation_url', sa.String(length=500), nullable=True),
    sa.Column('yookassa_status', sa.String(length=50), nullable=True),
    sa.Column('is_paid', sa.Boolean(), nullable=False),
    sa.Column('paid_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.telegram_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('payments')
    # ### end Alembic commands ###
